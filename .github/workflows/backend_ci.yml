name: Continuous Integration - Backend

on:
  pull_request:
    branches:
      - main # Run the workflow only on pull requests to the main branch
    paths:
      - 'backend/**' # Workflow triggered on changes to code
      - '.github/workflows/backend_ci.yml'

jobs:
  build-image:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Build Docker Image
      run: |
        docker build -t backend:latest .
        
    - name: Run Docker image with environment variables
      run: |
        docker run -d --name backend \
          -p 4000:4000 \
          -e DATABASE_TYPE=1 \
          -e DATABASE_CONNECTION_URL=postgres://postgres:postgres@localhost:5432/postgres \
          backend:latest

    - name: Check running docker container
      run: docker ps

    - name: Wait for 5 seconds
      run: sleep 5

    - name: Test health of docker container
      run: curl -f http://localhost:4000/products/health || exit 1

  test-service:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - uses: dentarg/postgres@v1
    - run: psql < ./test/sql/init.sql
      env:
        DATABASE_URL: "${{ env.POSTGRES_URL }}" # or use POSTGRES_URL directly

    - name: Install dependencies
      run: npm install

    - name: Create env file
      run: |
        touch .env
        echo DATABASE_TYPE=1 >> .env
        echo DATABASE_CONNECTION_URL="${{ env.POSTGRES_URL }}" >> .env
        cat .env

    - name: Run tests
      run: npm run test
      

  code-quality:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install

    - name: Lint Codebase
      run: npm run lint
