name: Continuous Integration - Backend

on:
  pull_request:
    branches:
      - main # Run the workflow only on pull requests to the main branch
    paths:
      - 'backend/**' # Workflow triggered on changes to code
      - '.github/workflows/backend_ci.yml'

jobs:
  build-image:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Build Docker Image
      run: |
        docker build -t backend:latest .
        
    - name: Run Docker image with environment variables
      run: |
        docker run -d --name backend \
          -p 4000:4000 \
          -e DATABASE_TYPE=1 \
          -e DATABASE_CONNECTION_URL=postgres://postgres:postgres@localhost:5432/postgres \
          backend:latest

    - name: Check running docker container
      run: docker ps

    - name: Wait for 5 seconds
      run: sleep 5

    - name: Test health of docker container
      run: curl -f http://localhost:4000/products/health || exit 1

  test-service:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - uses: dentarg/postgres@v1
    - run: psql < ./test/sql/init.sql
      env:
        DATABASE_URL: "${{ env.POSTGRES_URL }}" # or use POSTGRES_URL directly

    - name: Install dependencies
      run: npm install

    - name: Create env file
      run: |
        touch .env
        echo DATABASE_TYPE=1 >> .env
        echo DATABASE_CONNECTION_URL="${{ env.POSTGRES_URL }}" >> .env
        cat .env

    - name: Run tests
      run: npm run test
      

  code-quality:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: npm install

    - name: Lint Codebase
      run: npm run lint


  sast-scan:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend
    
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        npm ci --force

    - name: OWASP Dependency Check
      run: |
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.2.0/dependency-check-7.2.0-release.zip
        unzip dependency-check-7.2.0-release.zip

    - name: Run scan with ODC
      run: |
        dependency-check/bin/dependency-check.sh --project "bitcoin" --scan . > ODC-report

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: sast report
        path: |
          ./ODC-report
  
  dast-scan:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Change script permission
        run: |
          chmod +x scripts/zap-script.sh

      - name: ZAP scan
        run: scripts/zap-script.sh

      - name: Get ZAP Report
        id: get_report
        run: |
          # Assuming zap_baseline_report.html is in the root directory
          report_content=$(cat zap_baseline_report.html)
          echo "::set-output name=report_content::$report_content"

      - name: Post ZAP Report as Comment
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const contextJson = JSON.stringify(github.context, null, 2);
            console.log(contextJson);
            const reportContent = context.jobs.test.outputs.report_content;
            const issueComment = `
            **ZAP Scan Report:**
            \`\`\`
            ${reportContent}
            \`\`\`
            `;
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issueComment,
            });


      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: zap report
          path: |
            ./zap_baseline_report.html